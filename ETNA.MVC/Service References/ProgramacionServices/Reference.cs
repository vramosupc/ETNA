//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ETNA.MVC.ProgramacionServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProgramacionDto", Namespace="http://schemas.datacontract.org/2004/07/ETNA.DTOs.PV")]
    [System.SerializableAttribute()]
    public partial class ProgramacionDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoProgramacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionEstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionPeriodicidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short DiasVigenciaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaInicioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombrePlantillaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodicidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlantillaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PorcentajeEncuestadosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoProgramacion {
            get {
                return this.CodigoProgramacionField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoProgramacionField, value) != true)) {
                    this.CodigoProgramacionField = value;
                    this.RaisePropertyChanged("CodigoProgramacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionEstado {
            get {
                return this.DescripcionEstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionEstadoField, value) != true)) {
                    this.DescripcionEstadoField = value;
                    this.RaisePropertyChanged("DescripcionEstado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescripcionPeriodicidad {
            get {
                return this.DescripcionPeriodicidadField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionPeriodicidadField, value) != true)) {
                    this.DescripcionPeriodicidadField = value;
                    this.RaisePropertyChanged("DescripcionPeriodicidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DiasVigencia {
            get {
                return this.DiasVigenciaField;
            }
            set {
                if ((this.DiasVigenciaField.Equals(value) != true)) {
                    this.DiasVigenciaField = value;
                    this.RaisePropertyChanged("DiasVigencia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaFin {
            get {
                return this.FechaFinField;
            }
            set {
                if ((this.FechaFinField.Equals(value) != true)) {
                    this.FechaFinField = value;
                    this.RaisePropertyChanged("FechaFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaInicio {
            get {
                return this.FechaInicioField;
            }
            set {
                if ((this.FechaInicioField.Equals(value) != true)) {
                    this.FechaInicioField = value;
                    this.RaisePropertyChanged("FechaInicio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombrePlantilla {
            get {
                return this.NombrePlantillaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombrePlantillaField, value) != true)) {
                    this.NombrePlantillaField = value;
                    this.RaisePropertyChanged("NombrePlantilla");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Periodicidad {
            get {
                return this.PeriodicidadField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodicidadField, value) != true)) {
                    this.PeriodicidadField = value;
                    this.RaisePropertyChanged("Periodicidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlantillaId {
            get {
                return this.PlantillaIdField;
            }
            set {
                if ((this.PlantillaIdField.Equals(value) != true)) {
                    this.PlantillaIdField = value;
                    this.RaisePropertyChanged("PlantillaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PorcentajeEncuestados {
            get {
                return this.PorcentajeEncuestadosField;
            }
            set {
                if ((this.PorcentajeEncuestadosField.Equals(value) != true)) {
                    this.PorcentajeEncuestadosField = value;
                    this.RaisePropertyChanged("PorcentajeEncuestados");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProgramacionServices.IProgramacion")]
    public interface IProgramacion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/InsertarProgramacion", ReplyAction="http://tempuri.org/IProgramacion/InsertarProgramacionResponse")]
        int InsertarProgramacion(string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/InsertarProgramacion", ReplyAction="http://tempuri.org/IProgramacion/InsertarProgramacionResponse")]
        System.Threading.Tasks.Task<int> InsertarProgramacionAsync(string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/EditarProgramacion", ReplyAction="http://tempuri.org/IProgramacion/EditarProgramacionResponse")]
        bool EditarProgramacion(int idPrograma, string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/EditarProgramacion", ReplyAction="http://tempuri.org/IProgramacion/EditarProgramacionResponse")]
        System.Threading.Tasks.Task<bool> EditarProgramacionAsync(int idPrograma, string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/ListaProgramaciones", ReplyAction="http://tempuri.org/IProgramacion/ListaProgramacionesResponse")]
        ETNA.MVC.ProgramacionServices.ProgramacionDto[] ListaProgramaciones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/ListaProgramaciones", ReplyAction="http://tempuri.org/IProgramacion/ListaProgramacionesResponse")]
        System.Threading.Tasks.Task<ETNA.MVC.ProgramacionServices.ProgramacionDto[]> ListaProgramacionesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/ObtenerProgramacion", ReplyAction="http://tempuri.org/IProgramacion/ObtenerProgramacionResponse")]
        ETNA.MVC.ProgramacionServices.ProgramacionDto ObtenerProgramacion(int idPrograma);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProgramacion/ObtenerProgramacion", ReplyAction="http://tempuri.org/IProgramacion/ObtenerProgramacionResponse")]
        System.Threading.Tasks.Task<ETNA.MVC.ProgramacionServices.ProgramacionDto> ObtenerProgramacionAsync(int idPrograma);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProgramacionChannel : ETNA.MVC.ProgramacionServices.IProgramacion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProgramacionClient : System.ServiceModel.ClientBase<ETNA.MVC.ProgramacionServices.IProgramacion>, ETNA.MVC.ProgramacionServices.IProgramacion {
        
        public ProgramacionClient() {
        }
        
        public ProgramacionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProgramacionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProgramacionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProgramacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertarProgramacion(string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId) {
            return base.Channel.InsertarProgramacion(codigoProgramacion, periodicidad, fechaInicio, fechaFin, porcentajeEncuestados, descripcion, estado, diasVigencia, plantillaId);
        }
        
        public System.Threading.Tasks.Task<int> InsertarProgramacionAsync(string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId) {
            return base.Channel.InsertarProgramacionAsync(codigoProgramacion, periodicidad, fechaInicio, fechaFin, porcentajeEncuestados, descripcion, estado, diasVigencia, plantillaId);
        }
        
        public bool EditarProgramacion(int idPrograma, string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId) {
            return base.Channel.EditarProgramacion(idPrograma, codigoProgramacion, periodicidad, fechaInicio, fechaFin, porcentajeEncuestados, descripcion, estado, diasVigencia, plantillaId);
        }
        
        public System.Threading.Tasks.Task<bool> EditarProgramacionAsync(int idPrograma, string codigoProgramacion, string periodicidad, System.DateTime fechaInicio, System.DateTime fechaFin, double porcentajeEncuestados, string descripcion, string estado, short diasVigencia, int plantillaId) {
            return base.Channel.EditarProgramacionAsync(idPrograma, codigoProgramacion, periodicidad, fechaInicio, fechaFin, porcentajeEncuestados, descripcion, estado, diasVigencia, plantillaId);
        }
        
        public ETNA.MVC.ProgramacionServices.ProgramacionDto[] ListaProgramaciones() {
            return base.Channel.ListaProgramaciones();
        }
        
        public System.Threading.Tasks.Task<ETNA.MVC.ProgramacionServices.ProgramacionDto[]> ListaProgramacionesAsync() {
            return base.Channel.ListaProgramacionesAsync();
        }
        
        public ETNA.MVC.ProgramacionServices.ProgramacionDto ObtenerProgramacion(int idPrograma) {
            return base.Channel.ObtenerProgramacion(idPrograma);
        }
        
        public System.Threading.Tasks.Task<ETNA.MVC.ProgramacionServices.ProgramacionDto> ObtenerProgramacionAsync(int idPrograma) {
            return base.Channel.ObtenerProgramacionAsync(idPrograma);
        }
    }
}
